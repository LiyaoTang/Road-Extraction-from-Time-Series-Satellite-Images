Train set: ../../Data/090085/Road_Data/motor_trunk_pri_sec_tert_uncl_track/posneg_topleft_coord_split_8_train
CV set: ../../Data/090085/Road_Data/motor_trunk_pri_sec_tert_uncl_track/posneg_topleft_coord_split_8_cv
will be saved as  sk-SGD_weight_p0_e15_r1
will be saved into  ./Result/motor_trunk_pri_sec_tert_uncl_track/sklearn/
mem usage before data loaded: 85.9375 MB

train data:
(7, 7650, 8091) (7650, 8091)
pos =  304920 neg =  21258076
cv data:
(7, 2365, 8091) (2365, 8091)
pos =  23150 neg =  782418
mem usage after data loaded: 6345.67578125 MB

SGDClassifier(alpha=0.0001, average=False,
       class_weight={0: 0.014140892109797729, 1: 0.9858591078902023},
       epsilon=0.1, eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='log', max_iter=1, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=False, tol=None, verbose=0, warm_start=False)
classes in classifier  [0 1] 1
mem usage after model created: 6345.734375 MB

 balanced_acc =  0.5090019684197891 AUC =  0.5291927374366909 avg_precision =  0.031285507183511974
 balanced_acc =  0.49868362686906764 AUC =  0.4999533856298728 avg_precision =  0.02873488515831151
 balanced_acc =  0.5143688862406276 AUC =  0.5000051123568221 avg_precision =  0.028737772481255277
 balanced_acc =  0.5104880542841322 AUC =  0.5037219898814311 avg_precision =  0.029095401896023533
 balanced_acc =  0.5027030167321436 AUC =  0.5008491970842098 avg_precision =  0.028793730886805265
 balanced_acc =  0.5089773154377625 AUC =  0.5001624178647567 avg_precision =  0.028752215626885742
 balanced_acc =  nan AUC =  0.5 avg_precision =  0.028737487089854612
 balanced_acc =  0.48254817868726974 AUC =  0.49991463368911637 avg_precision =  0.028732722452050097
 balanced_acc =  nan AUC =  0.5 avg_precision =  0.028737487089854612
 balanced_acc =  0.5089200869288336 AUC =  0.501410005347161 avg_precision =  0.02886484539007435
 balanced_acc =  nan AUC =  0.5 avg_precision =  0.028737487089854612
 balanced_acc =  0.49720900972104565 AUC =  0.48667616151684223 avg_precision =  0.02801657775006368
 balanced_acc =  0.5101241314582687 AUC =  0.5001102818732164 avg_precision =  0.028747979757541977
 balanced_acc =  0.4837720261776445 AUC =  0.4986333779140786 avg_precision =  0.02866140075518797
 balanced_acc =  nan AUC =  0.5 avg_precision =  0.028737487089854612
finish
mem usage after model trained: 6032.6328125 MB

(1, 448)
4695.132982724228 -4068.466701979784 419.0080695079228
On train set
true_pos  = 304920
false_pos = 21258071
true_neg  = 5
false_neg = 0
size = 21562996
pos_recall    = 1.0
pos_precision = 0.01414089538877051
pos_F1        = 0.027887437442012636
neg_recall    = 2.3520472878166396e-07
neg_precision = 1.0
neg_F1        = 4.7040934692082503e-07
accuracy      = 0.014141123988521818
balanced_accuracy = 0.5070704476943853
On CV set
true_pos  = 23150
false_pos = 782418
true_neg  = 0
false_neg = 0
size = 805568
pos_recall    = 1.0
pos_precision = 0.028737487089854612
pos_F1        = 0.055869427235802765
neg_recall    = 0.0
neg_precision = nan
neg_F1        = nan
accuracy      = 0.028737487089854612
balanced_accuracy = nan
/localdata/u6142160/anaconda3/lib/python3.6/site-packages/h5py/__init__.py:36: FutureWarning: Conversion of the second argument of issubdtype from `float` to `np.floating` is deprecated. In future, it will be treated as `np.float64 == np.dtype(float).type`.
  from ._conv import register_converters as _register_converters
/localdata/u6142160/anaconda3/lib/python3.6/site-packages/sklearn/linear_model/base.py:340: RuntimeWarning: overflow encountered in exp
  np.exp(prob, prob)
../Metric/Metric.py:166: RuntimeWarning: invalid value encountered in long_scalars
  return ( (true_pos/(true_pos + false_pos)) + (true_neg/(true_neg+false_neg)) ) / 2
../Metric/Metric.py:71: RuntimeWarning: invalid value encountered in long_scalars
  neg_precision = true_neg / (true_neg + false_neg)
../Metric/Metric.py:81: RuntimeWarning: invalid value encountered in long_scalars
  balanced_acc = ( (true_pos/(true_pos + false_pos)) + (true_neg/(true_neg+false_neg)) ) / 2
mem usage after prediction maps calculated: 8030.5625 MB

