Train set: ../../Data/090085/Road_Data/motor_trunk_pri_sec_tert_uncl_track/posneg_topleft_coord_split_8_train
CV set: ../../Data/090085/Road_Data/motor_trunk_pri_sec_tert_uncl_track/posneg_topleft_coord_split_8_cv
will be saved as  sk-SGD_weight_G10_0_p8_e15_r1
will be saved into  ./Result/motor_trunk_pri_sec_tert_uncl_track/sklearn/
mem usage before data loaded: 85.96484375 MB

mu =  [ 144.71187809  191.4973748   363.63933132  368.9204473  2385.57259035
 1362.40326606  728.31018062]
std =  [125.65067662 147.07994057 235.16274288 262.88676276 927.00557037
 842.7245097  545.23410243]
mu =  [ 150.8227309   198.28994142  365.46753706  373.66751856 2370.63525823
 1356.64782764  731.00466191]
std =  [126.38246319 147.99541069 225.10661372 260.4291769  792.72602026
 819.12928051 548.31700647]
train data:
(7, 7650, 8091) (7650, 8091)
pos =  304920 neg =  21258076
cv data:
(7, 2365, 8091) (2365, 8091)
pos =  23150 neg =  782418
mem usage after data loaded: 6133.7265625 MB

SGDClassifier(alpha=10.0, average=False,
       class_weight={0: 0.014140892109797729, 1: 0.9858591078902023},
       epsilon=0.1, eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='log', max_iter=1, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=False, tol=None, verbose=0, warm_start=False)
classes in classifier  [0 1] 1
mem usage after model created: 6133.7265625 MB

 balanced_acc =  0.5 AUC =  0.5734640030205527 avg_precision =  0.037322354423645364
 balanced_acc =  0.5 AUC =  0.5735732357012306 avg_precision =  0.03735045288763526
 balanced_acc =  0.5 AUC =  0.5735749906308885 avg_precision =  0.03734690721203681
 balanced_acc =  0.5 AUC =  0.573558998781244 avg_precision =  0.037343937033119994
 balanced_acc =  0.5 AUC =  0.573531378914654 avg_precision =  0.03733668991584034
 balanced_acc =  0.5 AUC =  0.5735282956555672 avg_precision =  0.03733709255069446
 balanced_acc =  0.5 AUC =  0.5735243070234833 avg_precision =  0.037336015233824696
 balanced_acc =  0.5 AUC =  0.5735403870971689 avg_precision =  0.037339951116733036
 balanced_acc =  0.5 AUC =  0.5735260069649403 avg_precision =  0.03733647794288251
 balanced_acc =  0.5 AUC =  0.5735415738706273 avg_precision =  0.037340578638782596
 balanced_acc =  0.5 AUC =  0.5735299673852062 avg_precision =  0.03733726684542013
 balanced_acc =  0.5 AUC =  0.5735353377338579 avg_precision =  0.03733854169380674
 balanced_acc =  0.5 AUC =  0.5735248162716402 avg_precision =  0.037336002730741995
 balanced_acc =  0.5 AUC =  0.5735385756886664 avg_precision =  0.03733919735516511
 balanced_acc =  0.5 AUC =  0.5735324041464703 avg_precision =  0.03733811298431686
finish
mem usage after model trained: 6278.12109375 MB

coefficient info:
shape =  (1, 448)
0.0010897674882267491 -0.0004422118403695762 0.0001280508970399596 5.758786361158836e-08
On train set
true_pos  = 304904
false_pos = 21254877
true_neg  = 3199
false_neg = 16
size = 21562996
pos_recall    = 0.9999475272202545
pos_precision = 0.014142258680642443
pos_F1        = 0.02789006810566493
neg_recall    = 0.0001504839854745086
neg_precision = 0.9950233281493002
neg_F1        = 0.00030092246044701614
accuracy      = 0.014288506105552308
balanced_accuracy = 0.5045827934149713
On CV set
true_pos  = 23150
false_pos = 782418
true_neg  = 0
false_neg = 0
size = 805568
pos_recall    = 1.0
pos_precision = 0.028737487089854612
pos_F1        = 0.055869427235802765
neg_recall    = 0.0
neg_precision = nan
neg_F1        = nan
accuracy      = 0.028737487089854612
balanced_accuracy = nan
/localdata/u6142160/anaconda3/lib/python3.6/site-packages/h5py/__init__.py:36: FutureWarning: Conversion of the second argument of issubdtype from `float` to `np.floating` is deprecated. In future, it will be treated as `np.float64 == np.dtype(float).type`.
  from ._conv import register_converters as _register_converters
../Metric/Metric.py:71: RuntimeWarning: invalid value encountered in long_scalars
  neg_precision = true_neg / (true_neg + false_neg)
../Metric/Metric.py:81: RuntimeWarning: invalid value encountered in long_scalars
  balanced_acc = ( (true_pos/(true_pos + false_pos)) + (true_neg/(true_neg+false_neg)) ) / 2
mem usage after prediction maps calculated: 9207.05859375 MB

