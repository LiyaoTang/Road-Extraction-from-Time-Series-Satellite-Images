Train set: ../../Data/090085/Road_Data/motor_trunk_pri_sec_tert_uncl_track/posneg_topleft_coord_split_8_train
CV set: ../../Data/090085/Road_Data/motor_trunk_pri_sec_tert_uncl_track/posneg_topleft_coord_split_8_cv
will be saved as  sk-SGD_weight_p16_n0_3_e15_r0
will be saved into  ./Result/motor_trunk_pri_sec_tert_uncl_track/sklearn/
mem usage before data loaded: 83.9453125 MB

mu =  [ 144.71187809  191.4973748   363.63933132  368.9204473  2385.57259035
 1362.40326606  728.31018062]
mu =  [ 150.8227309   198.28994142  365.46753706  373.66751856 2370.63525823
 1356.64782764  731.00466191]
train data:
(7, 7650, 8091) (7650, 8091)
pos =  304920 neg =  21258076
cv data:
(7, 2365, 8091) (2365, 8091)
pos =  23150 neg =  782418
mem usage after data loaded: 6360.0234375 MB

SGDClassifier(alpha=0.3, average=False,
       class_weight={0: 0.014140892109797729, 1: 0.9858591078902023},
       epsilon=0.1, eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='log', max_iter=1, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=False, tol=None, verbose=0, warm_start=False)
classes in classifier  [0 1] 1
mem usage after model created: 6360.0234375 MB

 balanced_acc =  0.5184157975535849 AUC =  0.5183827816109321 avg_precision =  0.02982521689612562
 balanced_acc =  0.5 AUC =  0.5 avg_precision =  0.028737487089854612
 balanced_acc =  0.5074944509811024 AUC =  0.5075489371109279 avg_precision =  0.02922382110892241
 balanced_acc =  0.5 AUC =  0.5 avg_precision =  0.028737487089854612
 balanced_acc =  0.5 AUC =  0.5 avg_precision =  0.028737487089854612
 balanced_acc =  0.5045075767695323 AUC =  0.504490561786015 avg_precision =  0.029206306192622086
 balanced_acc =  0.5112992797589145 AUC =  0.5113396643137073 avg_precision =  0.029498888619837196
 balanced_acc =  0.5 AUC =  0.5 avg_precision =  0.028737487089854612
 balanced_acc =  0.5 AUC =  0.5 avg_precision =  0.028737487089854612
 balanced_acc =  0.5 AUC =  0.5 avg_precision =  0.028737487089854612
 balanced_acc =  0.5054889628384495 AUC =  0.5054639795622328 avg_precision =  0.02917373490912827
 balanced_acc =  0.507175453165575 AUC =  0.507170996692112 avg_precision =  0.029186606285898396
 balanced_acc =  0.4988419720652542 AUC =  0.49884285999219563 avg_precision =  0.028673018632937818
 balanced_acc =  0.5043702973459906 AUC =  0.5044025772969718 avg_precision =  0.02905060554250816
 balanced_acc =  0.5 AUC =  0.5 avg_precision =  0.028737487089854612
finish
mem usage after model trained: 6497.94921875 MB

coefficient info:
shape =  (1, 448)
0.9783737621014986 -0.7778820961985791 0.10075131944756942 0.06014332341826386
On train set
true_pos  = 304919
false_pos = 21132343
true_neg  = 125733
false_neg = 1
size = 21562996
pos_recall    = 0.9999967204512659
pos_precision = 0.014223784735196128
pos_F1        = 0.028048610760410344
neg_recall    = 0.005914599232780991
neg_precision = 0.9999920467017672
neg_F1        = 0.01175964432905081
accuracy      = 0.019971807257210455
balanced_accuracy = 0.5071079157184817
On CV set
true_pos  = 23150
false_pos = 782418
true_neg  = 0
false_neg = 0
size = 805568
pos_recall    = 1.0
pos_precision = 0.028737487089854612
pos_F1        = 0.055869427235802765
neg_recall    = 0.0
neg_precision = nan
neg_F1        = nan
accuracy      = 0.028737487089854612
balanced_accuracy = nan
/localdata/u6142160/anaconda3/lib/python3.6/site-packages/h5py/__init__.py:36: FutureWarning: Conversion of the second argument of issubdtype from `float` to `np.floating` is deprecated. In future, it will be treated as `np.float64 == np.dtype(float).type`.
  from ._conv import register_converters as _register_converters
/localdata/u6142160/anaconda3/lib/python3.6/site-packages/sklearn/linear_model/base.py:340: RuntimeWarning: overflow encountered in exp
  np.exp(prob, prob)
../Metric/Metric.py:71: RuntimeWarning: invalid value encountered in long_scalars
  neg_precision = true_neg / (true_neg + false_neg)
../Metric/Metric.py:81: RuntimeWarning: invalid value encountered in long_scalars
  balanced_acc = ( (true_pos/(true_pos + false_pos)) + (true_neg/(true_neg+false_neg)) ) / 2
mem usage after prediction maps calculated: 7956.26171875 MB

