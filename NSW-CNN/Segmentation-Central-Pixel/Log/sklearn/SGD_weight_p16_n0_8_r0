Train set: ../../Data/090085/Road_Data/motor_trunk_pri_sec_tert_uncl_track/posneg_topleft_coord_split_8_train
CV set: ../../Data/090085/Road_Data/motor_trunk_pri_sec_tert_uncl_track/posneg_topleft_coord_split_8_cv
will be saved as  sk-SGD_weight_p16_n0_8_e15_r0
will be saved into  ./Result/motor_trunk_pri_sec_tert_uncl_track/sklearn/
mem usage before data loaded: 87.94921875 MB

mu =  [ 144.71187809  191.4973748   363.63933132  368.9204473  2385.57259035
 1362.40326606  728.31018062]
mu =  [ 150.8227309   198.28994142  365.46753706  373.66751856 2370.63525823
 1356.64782764  731.00466191]
train data:
(7, 7650, 8091) (7650, 8091)
pos =  304920 neg =  21258076
cv data:
(7, 2365, 8091) (2365, 8091)
pos =  23150 neg =  782418
mem usage after data loaded: 6162.16015625 MB

SGDClassifier(alpha=0.8, average=False,
       class_weight={0: 0.014140892109797729, 1: 0.9858591078902023},
       epsilon=0.1, eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='log', max_iter=1, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=False, tol=None, verbose=0, warm_start=False)
classes in classifier  [0 1] 1
mem usage after model created: 6162.38671875 MB

 balanced_acc =  0.5020029811554939 AUC =  0.5019925321275326 avg_precision =  0.028849178261126155
 balanced_acc =  0.5 AUC =  0.5 avg_precision =  0.028737487089854612
 balanced_acc =  0.5000063904460276 AUC =  0.5000063904460276 avg_precision =  0.028737843829991137
 balanced_acc =  0.5150520950540394 AUC =  0.515128344779464 avg_precision =  0.029756457970795423
 balanced_acc =  0.5 AUC =  0.5 avg_precision =  0.028737487089854612
 balanced_acc =  0.4998920158164837 AUC =  0.4998920193222575 avg_precision =  0.028731460109449925
 balanced_acc =  0.503138822952276 AUC =  0.5032382679540465 avg_precision =  0.028931180112080145
 balanced_acc =  0.4966089488758631 AUC =  0.49661178548857743 avg_precision =  0.028549623615843487
 balanced_acc =  0.5190405670317016 AUC =  0.5191270013338006 avg_precision =  0.03001081501651614
 balanced_acc =  0.5 AUC =  0.5 avg_precision =  0.028737487089854612
 balanced_acc =  0.5 AUC =  0.5 avg_precision =  0.028737487089854612
 balanced_acc =  0.5215648290432572 AUC =  0.5215141526958404 avg_precision =  0.030215793943669744
 balanced_acc =  0.4996696785349478 AUC =  0.49966967605054124 avg_precision =  0.028719059306985987
 balanced_acc =  0.4999952753762445 AUC =  0.4999952753762445 avg_precision =  0.028737223348243572
 balanced_acc =  0.5 AUC =  0.5 avg_precision =  0.028737487089854612
finish
mem usage after model trained: 6300.41796875 MB

coefficient info:
shape =  (1, 448)
0.30669466949588414 -0.3096106439902657 0.03272334967295534 0.008457192131345728
On train set
true_pos  = 304920
false_pos = 21257938
true_neg  = 138
false_neg = 0
size = 21562996
pos_recall    = 1.0
pos_precision = 0.014140982610004666
pos_F1        = 0.027887607053629315
neg_recall    = 6.491650514373925e-06
neg_precision = 1.0
neg_F1        = 1.298321674624218e-05
accuracy      = 0.014147291962582565
balanced_accuracy = 0.5070704913050024
On CV set
true_pos  = 23150
false_pos = 782418
true_neg  = 0
false_neg = 0
size = 805568
pos_recall    = 1.0
pos_precision = 0.028737487089854612
pos_F1        = 0.055869427235802765
neg_recall    = 0.0
neg_precision = nan
neg_F1        = nan
accuracy      = 0.028737487089854612
balanced_accuracy = nan
/localdata/u6142160/anaconda3/lib/python3.6/site-packages/h5py/__init__.py:36: FutureWarning: Conversion of the second argument of issubdtype from `float` to `np.floating` is deprecated. In future, it will be treated as `np.float64 == np.dtype(float).type`.
  from ._conv import register_converters as _register_converters
/localdata/u6142160/anaconda3/lib/python3.6/site-packages/sklearn/linear_model/base.py:340: RuntimeWarning: overflow encountered in exp
  np.exp(prob, prob)
../Metric/Metric.py:71: RuntimeWarning: invalid value encountered in long_scalars
  neg_precision = true_neg / (true_neg + false_neg)
../Metric/Metric.py:81: RuntimeWarning: invalid value encountered in long_scalars
  balanced_acc = ( (true_pos/(true_pos + false_pos)) + (true_neg/(true_neg+false_neg)) ) / 2
mem usage after prediction maps calculated: 8325.58984375 MB

