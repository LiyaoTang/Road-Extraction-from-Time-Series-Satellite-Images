Train set: ../../Data/090085/Road_Data/motor_trunk_pri_sec_tert_uncl_track/posneg_topleft_coord_split_8_train
CV set: ../../Data/090085/Road_Data/motor_trunk_pri_sec_tert_uncl_track/posneg_topleft_coord_split_8_cv
will be saved as  sk-SGD_weight_G0_01_p8_e15_r1
will be saved into  ./Result/motor_trunk_pri_sec_tert_uncl_track/sklearn/
mem usage before data loaded: 83.96875 MB

mu =  [ 144.71187809  191.4973748   363.63933132  368.9204473  2385.57259035
 1362.40326606  728.31018062]
std =  [125.65067662 147.07994057 235.16274288 262.88676276 927.00557037
 842.7245097  545.23410243]
mu =  [ 150.8227309   198.28994142  365.46753706  373.66751856 2370.63525823
 1356.64782764  731.00466191]
std =  [126.38246319 147.99541069 225.10661372 260.4291769  792.72602026
 819.12928051 548.31700647]
train data:
(7, 7650, 8091) (7650, 8091)
pos =  304920 neg =  21258076
cv data:
(7, 2365, 8091) (2365, 8091)
pos =  23150 neg =  782418
mem usage after data loaded: 6131.73046875 MB

SGDClassifier(alpha=0.01, average=False,
       class_weight={0: 0.014140892109797729, 1: 0.9858591078902023},
       epsilon=0.1, eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='log', max_iter=1, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=False, tol=None, verbose=0, warm_start=False)
classes in classifier  [0 1] 1
mem usage after model created: 6131.73046875 MB

 balanced_acc =  0.5 AUC =  0.5293725583492855 avg_precision =  0.03516548585940426
 balanced_acc =  0.5 AUC =  0.5414295957770431 avg_precision =  0.03700411864591643
 balanced_acc =  0.5 AUC =  0.5569400894221875 avg_precision =  0.03954011476652758
 balanced_acc =  0.5 AUC =  0.5732464994006203 avg_precision =  0.042654791090555505
 balanced_acc =  0.5 AUC =  0.5941193268359916 avg_precision =  0.04714646619142517
 balanced_acc =  0.5 AUC =  0.6120781311997161 avg_precision =  0.05074917471292809
 balanced_acc =  0.5 AUC =  0.6318334588262349 avg_precision =  0.05356036418970134
 balanced_acc =  0.5 AUC =  0.645304307877788 avg_precision =  0.05595250600676082
 balanced_acc =  0.5 AUC =  0.6628890173529567 avg_precision =  0.057404889646207206
 balanced_acc =  0.5 AUC =  0.6731694203526469 avg_precision =  0.05879519451546343
 balanced_acc =  0.5 AUC =  0.6802341040387911 avg_precision =  0.05987580759732973
 balanced_acc =  0.5 AUC =  0.6868977138362906 avg_precision =  0.06069093407107223
 balanced_acc =  0.5 AUC =  0.6910617368044205 avg_precision =  0.06106019977905307
 balanced_acc =  0.5 AUC =  0.6949301562343422 avg_precision =  0.061326643477635126
 balanced_acc =  0.5 AUC =  0.6972800658436225 avg_precision =  0.06155178722869882
finish
mem usage after model trained: 6266.9921875 MB

coefficient info:
shape =  (1, 448)
0.02692829190984283 -0.01941069817024865 4.082215451875519e-05 2.746029182837866e-05
On train set
true_pos  = 304919
false_pos = 21257997
true_neg  = 79
false_neg = 1
size = 21562996
pos_recall    = 0.9999967204512659
pos_precision = 0.014140898197627816
pos_F1        = 0.027887441628883625
neg_recall    = 3.716234714750291e-06
neg_precision = 0.9875
neg_F1        = 7.43244145917454e-06
accuracy      = 0.014144509417893506
balanced_accuracy = 0.500820449098814
On CV set
true_pos  = 23150
false_pos = 782418
true_neg  = 0
false_neg = 0
size = 805568
pos_recall    = 1.0
pos_precision = 0.028737487089854612
pos_F1        = 0.055869427235802765
neg_recall    = 0.0
neg_precision = nan
neg_F1        = nan
accuracy      = 0.028737487089854612
balanced_accuracy = nan
/localdata/u6142160/anaconda3/lib/python3.6/site-packages/h5py/__init__.py:36: FutureWarning: Conversion of the second argument of issubdtype from `float` to `np.floating` is deprecated. In future, it will be treated as `np.float64 == np.dtype(float).type`.
  from ._conv import register_converters as _register_converters
../Metric/Metric.py:71: RuntimeWarning: invalid value encountered in long_scalars
  neg_precision = true_neg / (true_neg + false_neg)
../Metric/Metric.py:81: RuntimeWarning: invalid value encountered in long_scalars
  balanced_acc = ( (true_pos/(true_pos + false_pos)) + (true_neg/(true_neg+false_neg)) ) / 2
mem usage after prediction maps calculated: 9253.90234375 MB

