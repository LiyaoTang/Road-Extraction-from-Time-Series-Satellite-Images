Train set: ../../Data/090085/Road_Data/motor_trunk_pri_sec_tert_uncl_track/posneg_topleft_coord_split_8_train
CV set: ../../Data/090085/Road_Data/motor_trunk_pri_sec_tert_uncl_track/posneg_topleft_coord_split_8_cv
will be saved as  sk-SGD_weight_G1_0_p8_e15_r0
will be saved into  ./Result/motor_trunk_pri_sec_tert_uncl_track/sklearn/
mem usage before data loaded: 83.95703125 MB

mu =  [ 144.71187809  191.4973748   363.63933132  368.9204473  2385.57259035
 1362.40326606  728.31018062]
std =  [125.65067662 147.07994057 235.16274288 262.88676276 927.00557037
 842.7245097  545.23410243]
mu =  [ 150.8227309   198.28994142  365.46753706  373.66751856 2370.63525823
 1356.64782764  731.00466191]
std =  [126.38246319 147.99541069 225.10661372 260.4291769  792.72602026
 819.12928051 548.31700647]
train data:
(7, 7650, 8091) (7650, 8091)
pos =  304920 neg =  21258076
cv data:
(7, 2365, 8091) (2365, 8091)
pos =  23150 neg =  782418
mem usage after data loaded: 6131.734375 MB

SGDClassifier(alpha=1.0, average=False,
       class_weight={0: 0.014140892109797729, 1: 0.9858591078902023},
       epsilon=0.1, eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='log', max_iter=1, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=False, tol=None, verbose=0, warm_start=False)
classes in classifier  [0 1] 1
mem usage after model created: 6131.734375 MB

 balanced_acc =  0.5 AUC =  0.6213214538613081 avg_precision =  0.049700486055111154
 balanced_acc =  0.5 AUC =  0.6210658619684527 avg_precision =  0.049653085077613374
 balanced_acc =  0.5 AUC =  0.6209335398747573 avg_precision =  0.04961987393273401
 balanced_acc =  0.5 AUC =  0.620960016583028 avg_precision =  0.04962481569273588
 balanced_acc =  0.5 AUC =  0.6207622414155702 avg_precision =  0.049582617100419474
 balanced_acc =  0.5 AUC =  0.6207464861918583 avg_precision =  0.04957716382059281
 balanced_acc =  0.5 AUC =  0.6205849834168892 avg_precision =  0.04954399476619672
 balanced_acc =  0.5 AUC =  0.6205039776261623 avg_precision =  0.04952728014710977
 balanced_acc =  0.5 AUC =  0.6205919871248993 avg_precision =  0.04954535834390727
 balanced_acc =  0.5 AUC =  0.6205113146863376 avg_precision =  0.04952832532702364
 balanced_acc =  0.5 AUC =  0.6205626793524225 avg_precision =  0.04953895296492053
 balanced_acc =  0.5 AUC =  0.6205269602096932 avg_precision =  0.049531728222716315
 balanced_acc =  0.5 AUC =  0.6205300070860247 avg_precision =  0.04953173209378266
 balanced_acc =  0.5 AUC =  0.6203998714358199 avg_precision =  0.04950406628593079
 balanced_acc =  0.5 AUC =  0.6204234405049502 avg_precision =  0.049509539174368955
finish
mem usage after model trained: 6250.3359375 MB

coefficient info:
shape =  (1, 448)
0.004598379267043617 -0.002317120800354487 0.00014485701302511338 1.014069969309541e-06
On train set
true_pos  = 304919
false_pos = 21257975
true_neg  = 101
false_neg = 1
size = 21562996
pos_recall    = 0.9999967204512659
pos_precision = 0.014140912625179162
pos_F1        = 0.027887469684898542
neg_recall    = 4.751135521389612e-06
neg_precision = 0.9901960784313726
neg_F1        = 9.502225449424688e-06
accuracy      = 0.014145529684279495
balanced_accuracy = 0.5021684955282759
On CV set
true_pos  = 23150
false_pos = 782418
true_neg  = 0
false_neg = 0
size = 805568
pos_recall    = 1.0
pos_precision = 0.028737487089854612
pos_F1        = 0.055869427235802765
neg_recall    = 0.0
neg_precision = nan
neg_F1        = nan
accuracy      = 0.028737487089854612
balanced_accuracy = nan
/localdata/u6142160/anaconda3/lib/python3.6/site-packages/h5py/__init__.py:36: FutureWarning: Conversion of the second argument of issubdtype from `float` to `np.floating` is deprecated. In future, it will be treated as `np.float64 == np.dtype(float).type`.
  from ._conv import register_converters as _register_converters
../Metric/Metric.py:71: RuntimeWarning: invalid value encountered in long_scalars
  neg_precision = true_neg / (true_neg + false_neg)
../Metric/Metric.py:81: RuntimeWarning: invalid value encountered in long_scalars
  balanced_acc = ( (true_pos/(true_pos + false_pos)) + (true_neg/(true_neg+false_neg)) ) / 2
mem usage after prediction maps calculated: 9193.62109375 MB

