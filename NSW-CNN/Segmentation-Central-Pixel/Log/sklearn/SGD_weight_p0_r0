Train set: ../../Data/090085/Road_Data/motor_trunk_pri_sec_tert_uncl_track/posneg_topleft_coord_split_8_train
CV set: ../../Data/090085/Road_Data/motor_trunk_pri_sec_tert_uncl_track/posneg_topleft_coord_split_8_cv
will be saved as  sk-SGD_weight_p0_e15_r0
will be saved into  ./Result/motor_trunk_pri_sec_tert_uncl_track/sklearn/
mem usage before data loaded: 85.96484375 MB

train data:
(7, 7650, 8091) (7650, 8091)
pos =  304920 neg =  21258076
cv data:
(7, 2365, 8091) (2365, 8091)
pos =  23150 neg =  782418
mem usage after data loaded: 6361.7734375 MB

SGDClassifier(alpha=0.0001, average=False,
       class_weight={0: 0.014140892109797729, 1: 0.9858591078902023},
       epsilon=0.1, eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='log', max_iter=1, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=False, tol=None, verbose=0, warm_start=False)
classes in classifier  [0 1] 1
mem usage after model created: 6361.7734375 MB

 balanced_acc =  0.5129902410026145 AUC =  0.5318391737344862 avg_precision =  0.03200328548519407
 balanced_acc =  0.5157129137719423 AUC =  0.5010902055651626 avg_precision =  0.02886484314090602
 balanced_acc =  0.5044275903727495 AUC =  0.501616208615782 avg_precision =  0.02885522403516331
 balanced_acc =  nan AUC =  0.5 avg_precision =  0.028737487089854612
 balanced_acc =  0.49676253906470913 AUC =  0.4999795577498866 avg_precision =  0.028736345981564927
 balanced_acc =  nan AUC =  0.5 avg_precision =  0.028737487089854612
 balanced_acc =  nan AUC =  0.5 avg_precision =  0.028737487089854612
 balanced_acc =  0.5206313153987068 AUC =  0.5004062600599493 avg_precision =  0.02879271119896684
 balanced_acc =  nan AUC =  0.5 avg_precision =  0.028737487089854612
 balanced_acc =  0.5065147972813282 AUC =  0.5034259686868586 avg_precision =  0.029014156249734465
 balanced_acc =  0.5143687613817348 AUC =  0.5000006390446028 avg_precision =  0.028737522763469706
 balanced_acc =  0.49661954754847826 AUC =  0.4933188666333348 avg_precision =  0.028369665966489113
 balanced_acc =  nan AUC =  0.5 avg_precision =  0.028737487089854612
 balanced_acc =  0.4999298663211332 AUC =  0.49998989740874566 avg_precision =  0.028736925871564525
 balanced_acc =  0.5062183774107166 AUC =  0.5008307077985696 avg_precision =  0.028803853645508123
finish
mem usage after model trained: 6356.67578125 MB

(1, 448)
4716.193779970183 -3895.5591343831034 431.2241648639897
On train set
true_pos  = 10406
false_pos = 668859
true_neg  = 20589217
false_neg = 294514
size = 21562996
pos_recall    = 0.034126984126984124
pos_precision = 0.015319499753409935
pos_F1        = 0.021146430803151844
neg_recall    = 0.968536240062365
neg_precision = 0.9858974433256203
neg_F1        = 0.977139732048035
accuracy      = 0.9553228595877864
balanced_accuracy = 0.5006084715395152
On CV set
true_pos  = 124
false_pos = 2891
true_neg  = 779527
false_neg = 23026
size = 805568
pos_recall    = 0.005356371490280777
pos_precision = 0.041127694859038146
pos_F1        = 0.009478310720428052
neg_recall    = 0.9963050441068585
neg_precision = 0.971309059962395
neg_F1        = 0.9836482812619286
accuracy      = 0.967827669420831
balanced_accuracy = 0.5062183774107166
/localdata/u6142160/anaconda3/lib/python3.6/site-packages/h5py/__init__.py:36: FutureWarning: Conversion of the second argument of issubdtype from `float` to `np.floating` is deprecated. In future, it will be treated as `np.float64 == np.dtype(float).type`.
  from ._conv import register_converters as _register_converters
/localdata/u6142160/anaconda3/lib/python3.6/site-packages/sklearn/linear_model/base.py:340: RuntimeWarning: overflow encountered in exp
  np.exp(prob, prob)
../Metric/Metric.py:166: RuntimeWarning: invalid value encountered in long_scalars
  return ( (true_pos/(true_pos + false_pos)) + (true_neg/(true_neg+false_neg)) ) / 2
mem usage after prediction maps calculated: 8359.53125 MB

