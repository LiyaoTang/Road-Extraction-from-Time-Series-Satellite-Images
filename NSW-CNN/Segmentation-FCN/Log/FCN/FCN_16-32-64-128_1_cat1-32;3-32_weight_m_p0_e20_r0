Train set: ../../Data/090085/Road_Data/motor_trunk_pri_sec_tert_uncl_track/posneg_seg_coord_split_thr1_128_16_train
CV set: ../../Data/090085/Road_Data/motor_trunk_pri_sec_tert_uncl_track/posneg_seg_coord_split_thr1_128_16_cv
will be saved as  FCN_16-32-64-128_1_cat1-32;3-32_weight_m_p0_e20_r0
will be saved into  ./Result/FCN/FCN_16-32-64-128_1_cat1-32;3-32_weight_m_p0_e20_r0/
mem usage before data loaded: 146.2109375 MB

mu =  [  140.42133132   186.22724995   365.92096392   358.74944958  2449.2505917
  1352.83568307   708.04858695]
class weight [neg= 0.014629, pos= 0.985371]
mu =  [  145.02183288   190.77598344   361.33590698   366.91707464  2380.64990791
  1375.52599508   734.46670819]
class weight [neg= 0.025683, pos= 0.974317]
train data: (7, 7650, 8091) (7650, 8091)
cv data: (7, 2365, 8091) (2365, 8091)
mem usage after data loaded: 5095.84765625 MB

[0.13264859577316138, 0.8673514042268387] [neg, pos]
mem usage after model created: 5144.02734375 MB

2018-04-27 03:57:34.352821: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX2 instructions, but these are available on your machine and could speed up CPU computations.
2018-04-27 03:57:34.352941: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use FMA instructions, but these are available on your machine and could speed up CPU computations.
2018-04-27 03:57:35.107777: I tensorflow/core/common_runtime/gpu/gpu_device.cc:955] Found device 0 with properties: 
name: Tesla K80
major: 3 minor: 7 memoryClockRate (GHz) 0.8235
pciBusID 0000:05:00.0
Total memory: 11.17GiB
Free memory: 11.10GiB
2018-04-27 03:57:35.107874: I tensorflow/core/common_runtime/gpu/gpu_device.cc:976] DMA: 0 
2018-04-27 03:57:35.107902: I tensorflow/core/common_runtime/gpu/gpu_device.cc:986] 0:   Y 
2018-04-27 03:57:35.107936: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1045] Creating TensorFlow device (/gpu:0) -> (device: 0, name: Tesla K80, pci bus id: 0000:05:00.0)
2018-04-27 04:07:24.577750: I tensorflow/stream_executor/dso_loader.cc:139] successfully opened CUDA library libcupti.so.8.0 locally
mean_cross_entropy =  0.0348705377389 balanced_acc =  0.499969110598 AUC =  0.499969629748 avg_precision =  0.0256831813579
mean_cross_entropy =  0.0346899514051 balanced_acc =  0.499999740425 AUC =  0.500001038299 avg_precision =  0.0256832203309
mean_cross_entropy =  0.0346899337254 balanced_acc =  0.5 AUC =  0.500001557449 avg_precision =  0.0256832333219
mean_cross_entropy =  0.034689883259 balanced_acc =  0.5 AUC =  0.500002941848 avg_precision =  0.0256833026076
mean_cross_entropy =  0.0346899578986 balanced_acc =  0.5 AUC =  0.500000692199 avg_precision =  0.0256831900185
mean_cross_entropy =  0.0346899431158 balanced_acc =  0.5 AUC =  0.500001124824 avg_precision =  0.0256832116702
mean_cross_entropy =  0.0346899356446 balanced_acc =  0.5 AUC =  0.500001384399 avg_precision =  0.0256832246612
mean_cross_entropy =  0.0346899334424 balanced_acc =  0.5 AUC =  0.500001470924 avg_precision =  0.0256832289916
mean_cross_entropy =  0.034689951863 balanced_acc =  0.5 AUC =  0.500000865249 avg_precision =  0.0256831986792
mean_cross_entropy =  0.0346898955257 balanced_acc =  0.5 AUC =  0.500002509223 avg_precision =  0.0256832809558
mean_cross_entropy =  0.0347159976315 balanced_acc =  0.5 AUC =  0.499995377774 avg_precision =  0.0256829240472
mean_cross_entropy =  0.034689691669 balanced_acc =  0.5 AUC =  0.500008652494 avg_precision =  0.0256835884151
mean_cross_entropy =  0.0346891819885 balanced_acc =  0.5 AUC =  0.500024486557 avg_precision =  0.0256843809146
mean_cross_entropy =  0.0346897287006 balanced_acc =  0.5 AUC =  0.500007873769 avg_precision =  0.025683549441
mean_cross_entropy =  0.034689767281 balanced_acc =  0.5 AUC =  0.50000700852 avg_precision =  0.0256835061366
mean_cross_entropy =  0.0346898178143 balanced_acc =  0.5 AUC =  0.500004758871 avg_precision =  0.0256833935457
mean_cross_entropy =  0.0346896940359 balanced_acc =  0.5 AUC =  0.500008565969 avg_precision =  0.0256835840847
mean_cross_entropy =  0.0346897996458 balanced_acc =  0.5 AUC =  0.500005624121 avg_precision =  0.0256834368498
mean_cross_entropy =  0.0346900281646 balanced_acc =  0.499999913475 AUC =  0.500026741832 avg_precision =  0.0256844981292
mean_cross_entropy =  0.0346896536494 balanced_acc =  0.499999913475 AUC =  0.500010296467 avg_precision =  0.0256836750247
finish
mem usage after model trained: 5977.50390625 MB

On training set: 
true_pos  = 0
false_pos = 1
true_neg  = 5778680
false_neg = 152327
size = 362
neg_F1        = 0.986991284482
balanced_accuracy = 0.499999913475
pos_precision = 0.0
pos_F1        = nan
accuracy      = 15963.2044199
neg_precision = 0.974316840294
pos_recall    = 0.0
neg_recall    = 0.99999982695
mean_cross_entropy =  0.034689653814 balanced_acc =  0.499999913475 AUC =  0.500010296467 avg_precision =  0.0256836750247
On CV set:
true_pos  = 0
false_pos = 1
true_neg  = 5778680
false_neg = 152327
size = 362
neg_F1        = 0.986991284482
balanced_accuracy = 0.499999913475
pos_precision = 0.0
pos_F1        = nan
accuracy      = 15963.2044199
neg_precision = 0.974316840294
pos_recall    = 0.0
neg_recall    = 0.99999982695
../Metric/Metric.py:62: RuntimeWarning: invalid value encountered in double_scalars
  pos_F1 = 2*(pos_recall*pos_precision) / (pos_recall+pos_precision)
mu =  [  140.42133132   186.22724995   365.92096392   358.74944958  2449.2505917
  1352.83568307   708.04858695]
class weight [neg= 0.014629, pos= 0.985371]
mu =  [  145.02183288   190.77598344   361.33590698   366.91707464  2380.64990791
  1375.52599508   734.46670819]
class weight [neg= 0.025683, pos= 0.974317]
mu =  [  145.02183288   190.77598344   361.33590698   366.91707464  2380.64990791
  1375.52599508   734.46670819]
class weight [neg= 0.025683, pos= 0.974317]
mem usage after prediction maps calculated: 7717.3046875 MB

